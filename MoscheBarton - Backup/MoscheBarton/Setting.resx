<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="DoneSetting" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9Q+lWQRCxHg68AAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="DoneSetting_Activated" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ECkJuPkAAAAASUVORK5CYII=
</value>
  </data>
</root>