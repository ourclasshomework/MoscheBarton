<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>